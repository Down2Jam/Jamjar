"use client";

import React, { forwardRef } from "react";
import type { LucideProps } from "lucide-react";
import {
  ALargeSmall,
  Apple,
  ArrowLeft,
  ArrowRight,
  ArrowUpRight,
  Award,
  Ban,
  Banana,
  Bell,
  Book,
  BookCopy,
  Bug,
  Calendar,
  Calendar1,
  CalendarArrowDown,
  CalendarCog,
  CalendarDays,
  CalendarFold,
  CalendarPlus,
  CalendarRange,
  Check,
  ChevronDown,
  ChevronLeft,
  ChevronRight,
  ChevronsDown,
  ChevronsLeft,
  ChevronsRight,
  ChevronUp,
  CircleAlert,
  CircleDotDashed,
  CircleHelp,
  Clipboard,
  Clock,
  Clock1,
  Clock2,
  Clock3,
  Clock4,
  ClockArrowDown,
  ClockArrowUp,
  Cloudy,
  Code,
  Code2,
  Cog,
  Dice3,
  Droplet,
  Eye,
  Fan,
  FileCode,
  FilePlus2,
  Flame,
  Gamepad,
  Gamepad2,
  Globe,
  Grid2x2,
  Hammer,
  Headphones,
  Heart,
  Home,
  Hourglass,
  Infinity,
  Info,
  LandPlot,
  Layers,
  Lightbulb,
  LineChart,
  Link,
  LogIn,
  LogOut,
  Map,
  Maximize2,
  Menu,
  MessageCircle,
  MessagesSquare,
  MicVocal,
  Minimize2,
  Minus,
  Monitor,
  Moon,
  MoreHorizontal,
  MoveUpRight,
  Music,
  Paintbrush,
  Palette,
  Pause,
  Pencil,
  Pill,
  Play,
  Plus,
  Rabbit,
  Rat,
  RefreshCwOff,
  Repeat,
  RotateCcw,
  Rss,
  Save,
  Scale,
  Search,
  Send,
  Settings,
  Settings2,
  Shell,
  Shield,
  ShieldAlert,
  ShieldX,
  SkipBack,
  SkipForward,
  Slice,
  Smartphone,
  Sparkles,
  SquareDashed,
  SquarePen,
  Star,
  StarOff,
  Swords,
  Syringe,
  Tags,
  Terminal,
  TrainFront,
  Trash,
  TreeDeciduous,
  Trophy,
  Turtle,
  Tv,
  Upload,
  User,
  UserPlus,
  Users,
  Users2,
  UserX,
  Volume2,
  Vote,
  Waves,
  X,
  ZoomOut,
} from "lucide-react";
import { useTheme } from "@/providers/SiteThemeProvider";
import {
  SiBluesky,
  SiDiscord,
  SiForgejo,
  SiGithub,
  SiHtml5,
  SiInstagram,
  SiLinux,
  SiYoutube,
} from "@icons-pack/react-simple-icons";

const MacOsIcon: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 50 50"
    fill="currentColor"
    {...props}
  >
    <path d="M 33.375 0 C 30.539063 0.191406 27.503906 1.878906 25.625 4.15625 C 23.980469 6.160156 22.601563 9.101563 23.125 12.15625 C 22.65625 12.011719 22.230469 11.996094 21.71875 11.8125 C 20.324219 11.316406 18.730469 10.78125 16.75 10.78125 C 12.816406 10.78125 8.789063 13.121094 6.25 17.03125 C 2.554688 22.710938 3.296875 32.707031 8.90625 41.25 C 9.894531 42.75 11.046875 44.386719 12.46875 45.6875 C 13.890625 46.988281 15.609375 47.980469 17.625 48 C 19.347656 48.019531 20.546875 47.445313 21.625 46.96875 C 22.703125 46.492188 23.707031 46.070313 25.59375 46.0625 C 27.503906 46.046875 28.476563 46.460938 29.53125 46.9375 C 30.585938 47.414063 31.773438 48.015625 33.5 48 C 35.554688 47.984375 37.300781 46.859375 38.75 45.46875 C 40.199219 44.078125 41.390625 42.371094 42.375 40.875 C 43.785156 38.726563 44.351563 37.554688 45.4375 35.15625 C 45.550781 34.90625 45.554688 34.617188 45.445313 34.363281 C 45.339844 34.109375 45.132813 33.910156 44.875 33.8125 C 41.320313 32.46875 39.292969 29.324219 39 26 C 38.707031 22.675781 40.113281 19.253906 43.65625 17.3125 C 41.425781 12.652344 37.847656 10.78125 34.34375 10.78125 C 32.109375 10.78125 30.46875 11.308594 29.125 11.8125 C 29.894531 11.25 31.097656 10.253906 32 9.09375 C 33.640625 6.988281 34.90625 3.992188 34.4375 0.84375 C 34.359375 0.328125 33.894531 -0.0390625 33.375 0 Z M 32.3125 2.375 C 32.246094 4.394531 31.554688 6.371094 30.40625 7.84375 C 29.203125 9.390625 27.179688 10.460938 25.21875 10.78125 C 25.253906 8.839844 26.019531 6.828125 27.1875 5.40625 C 28.414063 3.921875 30.445313 2.851563 32.3125 2.375 Z M 16.75 12.78125 C 18.363281 12.78125 19.65625 13.199219 21.03125 13.6875 C 22.40625 14.175781 23.855469 14.75 25.5625 14.75 C 27.230469 14.75 28.550781 14.171875 29.84375 13.6875 C 31.136719 13.203125 32.425781 12.78125 34.34375 12.78125 C 36.847656 12.78125 39.554688 14.082031 41.6875 16.34375 C 38.273438 18.753906 36.675781 22.511719 37 26.15625 C 37.324219 29.839844 39.542969 33.335938 43.1875 35.15625 C 42.398438 36.875 41.878906 38.011719 40.71875 39.78125 C 39.761719 41.238281 38.625 42.832031 37.375 44.03125 C 36.125 45.230469 34.800781 45.988281 33.46875 46 C 32.183594 46.011719 31.453125 45.628906 30.34375 45.125 C 29.234375 44.621094 27.800781 44.042969 25.59375 44.0625 C 23.390625 44.074219 21.9375 44.628906 20.8125 45.125 C 19.6875 45.621094 18.949219 46.011719 17.65625 46 C 16.289063 45.988281 15.019531 45.324219 13.8125 44.21875 C 12.605469 43.113281 11.515625 41.605469 10.5625 40.15625 C 5.3125 32.15625 4.890625 22.757813 7.90625 18.125 C 10.117188 14.722656 13.628906 12.78125 16.75 12.78125 Z" />
  </svg>
);

const iconMap = {
  alargesmall: ALargeSmall,
  apple: Apple,
  arrowleft: ArrowLeft,
  arrowright: ArrowRight,
  arrowupright: ArrowUpRight,
  award: Award,
  ban: Ban,
  banana: Banana,
  bell: Bell,
  book: Book,
  bookcopy: BookCopy,
  broadcast: Tv,
  bug: Bug,
  calendar: Calendar,
  calendar1: Calendar1,
  calendararrowdown: CalendarArrowDown,
  calendarcog: CalendarCog,
  calendardays: CalendarDays,
  calendarfold: CalendarFold,
  calendarplus: CalendarPlus,
  calendarrange: CalendarRange,
  check: Check,
  chevrondown: ChevronDown,
  chevronleft: ChevronLeft,
  chevronright: ChevronRight,
  chevronup: ChevronUp,
  chevronsdown: ChevronsDown,
  chevronsleft: ChevronsLeft,
  chevronsright: ChevronsRight,
  circlealert: CircleAlert,
  circledotdashed: CircleDotDashed,
  circlehelp: CircleHelp,
  clipboard: Clipboard,
  clock: Clock,
  clock1: Clock1,
  clock2: Clock2,
  clock3: Clock3,
  clock4: Clock4,
  clockarrowup: ClockArrowUp,
  clockarrowdown: ClockArrowDown,
  cloudy: Cloudy,
  code: Code,
  code2: Code2,
  cog: Cog,
  dice3: Dice3,
  droplet: Droplet,
  eye: Eye,
  fan: Fan,
  filecode: FileCode,
  fileplus2: FilePlus2,
  flame: Flame,
  gamepad: Gamepad,
  gamepad2: Gamepad2,
  globe: Globe,
  grid2x2: Grid2x2,
  hammer: Hammer,
  headphones: Headphones,
  heart: Heart,
  home: Home,
  hourglass: Hourglass,
  infinity: Infinity,
  info: Info,
  landplot: LandPlot,
  layers: Layers,
  lightbulb: Lightbulb,
  linechart: LineChart,
  link: Link,
  login: LogIn,
  logout: LogOut,
  map: Map,
  maximize2: Maximize2,
  menu: Menu,
  messagecircle: MessageCircle,
  messagessquare: MessagesSquare,
  monitor: Monitor,
  micvocal: MicVocal,
  minimize2: Minimize2,
  minus: Minus,
  moon: Moon,
  morehorizontal: MoreHorizontal,
  moveupright: MoveUpRight,
  music: Music,
  paintbrush: Paintbrush,
  palette: Palette,
  pause: Pause,
  pencil: Pencil,
  pill: Pill,
  play: Play,
  plus: Plus,
  rabbit: Rabbit,
  rat: Rat,
  refreshcwoff: RefreshCwOff,
  repeat: Repeat,
  rotateccw: RotateCcw,
  rss: Rss,
  save: Save,
  scale: Scale,
  search: Search,
  send: Send,
  settings: Settings,
  settings2: Settings2,
  shell: Shell,
  shield: Shield,
  shieldalert: ShieldAlert,
  shieldx: ShieldX,
  skipback: SkipBack,
  skipforward: SkipForward,
  slice: Slice,
  smartphone: Smartphone,
  sparkles: Sparkles,
  squaredashed: SquareDashed,
  squarepen: SquarePen,
  star: Star,
  staroff: StarOff,
  swords: Swords,
  syringe: Syringe,
  tags: Tags,
  terminal: Terminal,
  trainfront: TrainFront,
  trash: Trash,
  treedeciduous: TreeDeciduous,
  trophy: Trophy,
  turtle: Turtle,
  upload: Upload,
  user: User,
  userplus: UserPlus,
  userx: UserX,
  users: Users,
  users2: Users2,
  volume2: Volume2,
  vote: Vote,
  waves: Waves,
  x: X,
  zoomout: ZoomOut,

  sibluesky: SiBluesky,
  sidiscord: SiDiscord,
  siforgejo: SiForgejo,
  sigithub: SiGithub,
  siinstagram: SiInstagram,
  siyoutube: SiYoutube,

  silinux: SiLinux,
  sihtml5: SiHtml5,

  custommacos: MacOsIcon,
} as const;

export type IconName = keyof typeof iconMap;
type Color =
  | "text"
  | "textFaded"
  | "red"
  | "orange"
  | "yellow"
  | "green"
  | "blue";

export interface IconProps extends Omit<LucideProps, "color" | "size"> {
  name?: IconName;
  size?: number;
  color?: Color;
}

const Icon = forwardRef<SVGSVGElement, IconProps>(function Icon(
  { name = "circlehelp", size = 24, color, ...rest },
  ref
) {
  const { colors } = useTheme();

  const IconComponent = iconMap[name];

  return (
    <IconComponent
      ref={ref}
      size={size}
      color={color ? colors[color] : undefined}
      {...rest}
    />
  );
});

export default Icon;
